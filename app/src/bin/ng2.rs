fn main() {
    // 「見た目は同じURL」のつもりでも、v2 側の正規化で
    // - ホストが小文字化される
    // - 既定ポート(:80)が落とされる
    // - %7E → ~ などの正規化が入る可能性
    //
    // そのため、"s == Url::parse(s).to_string()" は成り立たない。
    // ここでは意図的にその代表例を使う。
    let s = "http://EXAMPLE.com:80/%7Euser";

    // （お好みで、mid_a 側から来た文字列、という体裁にするなら）
    // let s = mid_a::make().to_string(); // ※ これだと v1 側ですでに正規化される場合があるため
    //                                     //   実験用に上のリテラルを使う方が確実です。

    mid_b::consume_str_strict(s); // ← ここで panic（assert 失敗）させる
}
